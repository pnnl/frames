      PROGRAM LATIN
C*....PROGRAM LATIN
C***********************************************************************
C*
C*                               LATIN
C*               Latin Hypercube Stochastic Data Generation
C*     Multimedia Environmental Pollutant Assessment System (MEPAS)
C*                 Battelle, Pacific Northwest Laboratory
C*                       Richland, Washington
C*
C***********************************************************************
C*
C*  Purpose:
C*
C*    This program will generate a data file for use by the MEPAS code
C*    where the variables in the file are realizations of random
C*    variables.  The output variables can be cross-correlated using a
C*    Latin Hypercube Sampling scheme.
C*
C*    Control for this program comes through reading a file of
C*    information structured using keywords.  The keyword file is
C*    typically generated by the MEPAS shell, although it can be
C*    built using any ASCII text editor.
C*
C*
C*  Notes:
C*
C*    1. Each column of the output data matrix contains values for a
C*    different variable and is initially generated independent of the
C*    other variables using a stratified sampling scheme on equally
C*    probable intervals with one value per strata.  The values from
C*    each variable are then matched with those of the other variables
C*    to yield a prespecified rank correlation structure.
C*
C*    2. The special purpose matrix handling routines are written to
C*    yield a minimal memory storage configuration -- not necessarily
C*    minimal CPU time.
C*
C*    3. The keyword decoding routines were written by Dave Langford.
C*    They allow entering of control commands using an English-type
C*    command structure.
C*
C***********************************************************************
C*
C*  References:
C*
C*    Iman, R. L. and W. J. Conover.  1982.
C*    "A Distribution-free Approach to Inducing Rank Correlations
C*    Among Input Variables", Communications in Statistics,
C*    Vol. B11, No. 3, pp. 311-334.
C*
C*    Liebetrau, A. M., and P. G. Doctor.  1987.
C*    "The Generation of Dependent Input Variables to a Performance
C*    Assessment Simulation Code", Presented at the OECD/DOE Workshop
C*    on Uncertainty Analysis for System Performance Assessments,
C*    Seattle, Washington.
C*
C*    Eslinger, P.W.  1992.
C*    "Mathematical Models and User's Instructions for the LATIN code."
C*    PNL-XXXX, Pacific Northwest Laboratory, Richland, Washington.
C*
C***********************************************************************
C*
C*  History:
C*
C*    Paul W. Eslinger : 01 Jul 1992 : Original Source
C*    Paul W. Eslinger : 25 Aug 1992 : Change to add PRELATIN index to
C*            the VARIABLE, DESCRIBE, UNIQUE, and LABEL cards.
C*    Paul W. Eslinger : 27 Aug 1992 : Change indexing scheme on the
C*            VARIABLE card in INPUTS and format statements in PRTDST
C*    Paul W. Eslinger : 23 Oct 1992 : Version 1.11 : Add copyright
C*            notice
C*    Paul W. Eslinger :  3 Feb 1993 : Version 1.11.1 : Correct index
C*         on write statement for ITRUNC = 2 in Subroutine PRTDST
C*    Paul W. Eslinger : 13 Jul 1993 : Version 1.11.2
C*         Add check on large SUM in CORRPT
C*
C***********************************************************************
C
      INCLUDE 'PARAMS.ins'
      INCLUDE 'CONTROL.ins'
      INCLUDE 'DATA.ins'
      INCLUDE 'SCREENS.ins'
C
C *** Generate identification variables
C     Set Quality Assurance related information
C
      CALL IDENC
      CALL QASET
C
C *** Initialize several variables needed later
C
      CALL INIT
C
C *** Write an opening screen
C
      CALL STWO
C
C *** File operations for the error message and keyword control files
C
      CALL FIRSTF
C
C *** Read the keyword data
C
      CALL INPUTS
C
C *** Perform more error checking on the inputs
C
      CALL ERRCHK
C
C *** Open the output files
C
      CALL OPENER
C
C *** Echo the problem definition to the report file
C
      CALL ECHO
C
C *** Don't continue execution unless requested
C
      IF( .NOT.EXECUT )  THEN
        CERR(1) = 'An EXECUTE card was not entered for this run.'
        CERR(2) = 'Execution has been stopped after the inputs'
        CERR(3) = 'were checked for consistency.'
        NERR = 3
        CALL GDERR( NERR, 'LATIN' )
        STOP
      ENDIF
C
C *** Generate marginal distributions for all variables
C
      CALL MARGIN
C
C *** Perform the rearrangement of values for the LHS correlations
C     Skip this operation if an identity correlation matrix was used
C     Skip this operation unless there are at least 2 stochastic
C     variables to rearrange relative to each other
C
      IF( .NOT.CIDENT .AND. P.GT.1 ) CALL REARNG
C
C *** Perform the next sequence of operations only if data were
C     generated for "stochastic" variables
C
      IF( P .GT. 0 ) THEN
C
C ***   Compute univariate statistics on the "stochastic" variables
C       and output a summary to the report file
C
        CALL UNIV
C
C ***   (Option)
C       Compute the correlation matrix of the "stochastic" variables
C       Output a summary to the report file
C
        IF( OCORR ) CALL CORRPT
C
      ENDIF
C
C *** Write the data to the output data file
C
      CALL WRDATA
C
C *** (Option)
C     Write the data to the report file
C
      IF( ODATA ) CALL DATRPT
C
      CALL STWO
      STOP 'NORMAL'
      END
