import FRAMES2API.*;
import HiddenSoft.*;
import java.io.*;

AutoIt a=new AutoIt();
SystemDev s=new SystemDev();
DataSet d=new DataSet();
Error e=new Error();
FileTools f=new FileTools();
Testing t=new Testing();


// Start test suite
t.StartTestSuite("SUM3 Help Case","<B>Test case for SUM3</B><BR><BR>REQUIREMENTS<BR><BR>1. Provide an HTML-based Help file with descriptions of each input or selection item on each of the user interface screens <BR>2. Provide in the HTML-based Help file, instructions for using the S/U module <BR>3. Modify the S/U module user interface so that each input or selection item is linked to its description in the HTML-based Help file<BR><BR>TEST APPROACH<BR><BR>Requirement #3 states that all items (i.e., buttons, inputs, check boxes) on the SUM3 User Interface must be linked to on-line help.  A manual check was made to ensure that requirement #3 has been met.  In this autotest case, we did not automate the linkage check for every item, instead, we took a representative parameter (randomly selected) from each tab and checked to ensure that the linkage mechanism was working properly.<BR><BR>This test case requires that someone monitor the screens that are opened to verify that the appropriate screens and sections appear.  The details of what to watch for are listed in <font color=#0000FF>blue</font> in the steps sections in the right hand column below<BR><BR>.","c:\\frames\\documents\\");


// Start up the FRAMES 1.x user interface
t.NewTestCase("StartFRAMES","Start FRAMES");
t.Plan("Start FRAMES");
Runtime.getRuntime().exec("c:\\frames\\fui.exe");
t.Assert(a.WinWait("Framework","",5)==0, "Wait for Framework Window ");
a.WinActivate("Framework","");
t.Assert(a.WinWaitActive("Framework","",5)==0, "Activate Framework window");
t.TestCaseComplete();   


// Open up the SUM Help GID file
t.NewTestCase("OpenGIDFile","Open SumHelp1 GID file");
t.Plan("Open SumHelp1.GID file");
a.Send("!f#o{ENTER}");
t.Plan("Type in GID file name and path to file");
a.Send("C:\\frames\\sumhelp1\\Sumhelp1.gid{ENTER}");
a.Sleep(5000);
// t.Assert(a.WinWaitActive("C:\frames\sumhelp1\Sumhelp1.gid","",5)==0,"Open SUMHelp GID file");
t.TestCaseComplete();


// Open up SUM3 UI
t.NewTestCase("OpenSUM3UI","Open up the SUM3 UI");
t.Plan("Open up the SUM3 UI");
a.LeftClick(715,138);
a.RightClick(652,243);
a.Sleep(500);
a.Send("{Down}{Down}{ENTER}");
a.Sleep(3000);
if (a.IfWinActive("Sensitivity/Uncertainty","")==1) t.Assert(true,"SUM3 UI window is active");
else
  t.Assert(a.WinWaitActive("Sensitivity/Uncertainty","",3)==0,"Activate SUM3 UI window");
t.TestCaseComplete();


// Test links to Help File from Variables Tab
t.NewTestCase("TestHelpLink_VariablesTab","Test links to Help File from Variables Tab");
t.Plan("Addresses Requirements 1 and 3");
t.Plan("Test Link for the Alias parameter, on the Variables Tab, to the appropriate section in the Help File");
a.LeftClick(188,93);
a.Send("{F1}");
t.Plan("<font color=#0000FF>Wait for enough time to visually check that the Help File was brought up to the VAR-Alias parameter section</font>");
a.Sleep(5000);
if (a.IfWinActive("Sensitivity/Uncertainty","")==1) t.Assert(true,"Help File is open");
else
  t.Assert(a.WinWaitActive("Sensitivity/Uncertainty","",5)==0,"Help File is open");
t.Plan("Close the Help File");
a.Send("!f");
a.Sleep(500);
a.Send("c");
a.Sleep(500);
t.TestCaseComplete();


// Test links to Help File from Parameters Tab
t.NewTestCase("TestHelpLink_ParametersTab","Test links to Help File from Parameters Tab");
t.Plan("Addresses Requirements 1 and 3");
t.Plan("Test Link for the Upper Bound parameter, on the Parameter Tab, to the appropriate section in the Help File");
a.WinActivate("Sensitivity/Uncertainty","Sensitivity/Uncertainty");
a.LeftClick(259,52);
a.Sleep(500);
a.LeftClick(447,147);
a.Sleep(1000);
a.LeftClick(270,255);
a.Send("{F1}");
t.Plan("<font color=#0000FF>Wait for enough time to visually check that the Help File was brought up to the EQU-EQUATION parameter section</font>");
a.Sleep(5000);
if (a.IfWinActive("Sensitivity/Uncertainty","")==1) t.Assert(true,"Help File is open");
else
  t.Assert(a.WinWaitActive("Sensitivity/Uncertainty","",5)==0,"Help File is open");
t.Plan("Close the Help File");
a.Send("!f");
a.Sleep(500);
a.Send("c");
a.Sleep(500);
t.TestCaseComplete();


// Test links to Help File from Outputs Tab
t.NewTestCase("TestHelpLink_OutputsTab","Test links to Help File from Outputs Tab");
t.Plan("Addresses Requirements 1 and 3");
t.Plan("Test Link for the Number of Iterations parameter, on the Parameter Tab, to the appropriate section in the Help File");
a.WinActivate("Sensitivity/Uncertainty","Sensitivity/Uncertainty");
a.LeftClick(429,53);
a.Sleep(500);
a.LeftClick(217,116);
a.Sleep(1000);
a.Send("{F1}");
t.Plan("<font color=#0000FF>Wait for enough time to visually check that the Help File was brought up to the OUT-ITERATIONS parameter section</font>");
a.Sleep(5000);
if (a.IfWinActive("Sensitivity/Uncertainty","")==1) t.Assert(true,"Help File is open");
else
  t.Assert(a.WinWaitActive("Sensitivity/Uncertainty","",5)==0,"Help File is open");
t.Plan("Close the Help File");
a.Send("!f");
a.Sleep(500);
a.Send("c");
a.Sleep(500);
t.TestCaseComplete();


// Test links to User Guide
t.NewTestCase("TestUserGuideLink","Test link to User Guide File");
t.Plan("Addresses Requirement 2");
t.Plan("Test link to the User Guide from the Help File");
a.WinActivate("Sensitivity/Uncertainty","Sensitivity/Uncertainty");
a.LeftClick(53,32);
a.Sleep(3000);
a.LeftClick(286,259);
t.Plan("<font color=#0000FF>Wait for enough time to visually check that the SUM3 User Guide was brought up</font>");
a.Sleep(5000);
if (a.IfWinActive("FRAMES 1.5 Website","")==1) t.Assert(true,"SUM3 User Guide was brought up");
else
  t.Assert(a.WinWaitActive("FRAMES 1.5 Website","",5)==0,"SUM3 User Guide was brought up");
t.Plan("Close the User Guide Document");
a.Send("!f");
a.Sleep(500);
a.Send("c");
a.Sleep(500);
t.TestCaseComplete();


// Close SUM3 UI
t.NewTestCase("CloseSUM3UI","Close the SUM3 UI");
t.Plan("Close the SUM3 UI");
a.WinActivate("Sensitivity/Uncertainty","Sensitivity/Uncertainty");
a.Sleep(500);
a.Send("!f");
a.Sleep(500);
a.Send("x");
a.Sleep(500);
t.TestCaseComplete();


// Close down the FUI
t.NewTestCase("Close","Close FRAMES UI");
t.Plan("File - Exit");
a.Send("!f");
a.Sleep(500);
a.Send("x");
a.Sleep(2000);
t.Assert(a.WinWait("Framework","",5)==1,"Close Framework window"); //Check to verify that FUI is not open
t.TestCaseComplete();


// End test suite
if (t.TestSuiteComplete()==0) System.err.println("Test Failed");
else System.out.println("Success");

