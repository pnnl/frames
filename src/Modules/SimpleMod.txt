import FRAMES2API.*;

DataSet d=new DataSet();
DataSet.ByReferenceInteger dint=new DataSet.ByReferenceInteger();
DataSet.ByReferenceString  dstr=new DataSet.ByReferenceString();
SystemDev s=new SystemDev();
SystemDev.ByReferenceString sstr=new SystemDev.ByReferenceString();
DataInputStream dis;
dis=new DataInputStream(System.in);
String mod=bsh.args[2];
String omod;
String oDataSet,iDataSet;
int NumOMod,NumODataSet;


int pid=d.OpenIO(bsh.args[0],bsh.args[1],mod);
try
{
  if (pid<0) throw new Exception("Bad Pid");
  try
  {
    if(s.GetIconUISet(pid,mod,sstr)<0) throw new Exception("GetIconUISet failed");
    iDataSet=sstr.value;
//    if(d.GetDataset(pid,mod,"SimpleOutput",dataset,consumer)<0) throw new Exception("");
    if(d.NumOMod(pid,mod,dint)<0) throw new Exception("NumOMod failed");     
    NumOMod=dint.value;
    for (int i=1;i<=NumOMod;i++)
    {
      if (d.GetOModId(pid,mod,i,dstr)<0) throw new Exception("GetOModId failed");
      omod=dstr.value;
      if (d.NumOModSet(pid,mod,omod,dint)<0) throw new Exception ("NumOModSet failed");
      NumODataSet=dint.value;
      for (int j=1;j<=NumODataSet;j++)
      {
        if (d.GetODictionary(pid,mod,omod,j,dstr)<0) throw new Exception("GetODictionary failed");
        if (dstr.value.equalsIgnoreCase("SimpleOutput"))
        {
          if (d.GetODataSet(pid,mod,omod,j,dstr)<0) throw new Exception("GetODataSet failed");
          oDataSet=dstr.value;
        }  
      }  
    }    
    double a=d.ReadReal(pid,iDataSet,"A","g");
    double b=d.ReadReal(pid,iDataSet,"B","yr");
    double c1=d.ReadReal1(pid,iDataSet,"C","g/yr",1);
    double c2=d.ReadReal1(pid,iDataSet,"C","g/yr",2);
    d.WriteReal1(pid,oDataSet,"Output","g/yr",1,a/b+c1);
    d.WriteReal1(pid,oDataSet,"Output","g/yr",2,a/b+c2);
    s.SaveDataSet(pid,oDataSet);
  }
  catch(Exception e2)
  {
    System.err.println(e2.printStackTrace());
  }
  d.CloseIO(pid,0);
}
catch(Exception e)
{
  System.err.println(e.printStackTrace());
}
