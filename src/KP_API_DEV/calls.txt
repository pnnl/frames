'Calls from matlab to KP_API.dll for the RRA project
'Calls from vb executable can be viewed in Tester.vbp

m = actxserver('KP_API.clsEarthAlert');

Adding a finding in EMA and the input parameters
	      Name of the function i.e. 'SetConditionalPointData', 
	      username, (EMA User name)
	      Point name, (Needs to be unique within a class) 
              Class Name, 
              Subclass Name, 
              Notes, (Reachback component)
              Attribute Name 1, 
              Attribute Value 1, 
              Attribute Name2, 
              Attribute VAlue2, 
              Attribute Name3, 
              Attribute Value3, 
              Attr Name 4, 
              Attr Value 4, 
              Attr Name 5, 
              Attr Value 5, 
              Lat as Double,
              Lon as Double
Examples:
SensorFindings
S = m.invoke('SetConditionalPointData','chitra', 'Finding1', 'SensorFindings_Test1', 'AirSensors', 'http://www.arm.gov', 'Chemical','Sulphur','Concentration', '1','ThresholdLimit','TRUE', 'ConcentUnits', '.089', '','',46.5667,-119.699);

S = m.invoke('SetConditionalPointData','chitra', 'Point1', 'PotentialSource_Test1', 'Known', 'http://www.arm.gov', 'Chemical','2','Concentration', '1','ConcentUnits','89', 'ExpReleaseTime', '1:45', '','',46.5667,-119.699);



Deleting a point
	Name of the function i.e, 'DeletePoint'
	Name of the Point
	Name of the class

S=m.invoke('DeletePoint','Point1', 'PotentialSource_Test1');


Adding a Threat Area
	Name of the function - SaveTA
	Category Type = 'userdefined' or 'modeldefined
	TA type = 'polygon', 'wedge', 'cylinder', or 'circle'
	TA name = 'Threat area name'
	PolygonData ='Polygon?1?5?0304250.96,5083747.95?0311362.67,5081166.30?0309657.81,5076197.84?0303763.86,5076051.71?0304250.96,5083747.95'
		      The gis expects this format.  
		'Polygon?'<number of polygons>?<numberof cordinates><cordinates>
	modelcaseid = 0,
	impactLevel = "no effects"
	Angle = 0	'for wedge
	Distance = 0	'for wedge, circle, cylinder
	Direction = 0	'for wedge, cylinder
	Lattitude = 0 'if point provide lat and long
	Longitude = 0  'if point provide lat and long
	Location Type = 'offset', 'object', or 'point'
	IsolationRadius = 0
returns Boolean
S = m.invoke('SaveTA', 'userdefined', 'polygon', 'TAName', 'Polygon?1?5?0304250.96,5083747.95?0311362.67,5081166.30?0309657.81,5076197.84?0303763.86,5076051.71?0304250.96,5083747.95');

S= m.invoke('SaveTA', categorytype, tatype, TA name, Polygondata, modelcaseid, impactlevel, angle, distance, direction,lattitude, longitude, locationtype, isolradius)
S = m.invoke('SaveTA', 'userdefined', 'polygon', 'TAName', 'Polygon?1?5?0304250.96,5083747.95?0311362.67,5081166.30?0309657.81,5076197.84?0303763.86,5076051.71?0304250.96,5083747.95', 0, "no effects", 0,0,0,0,0,"",0)

Adding a PAR and PAD - the only difference is the PARtype

	Name of the function = SavePAR
	ParName = 'PaR for RRA'
	PARType = 'PAR', 'PAD'
	reachback = 'www.arm.gov'
	modelbased = 'false'
	shared ='true'
returns the PAR_id

S=m.invoke('SavePAR', 'PAR for RRA', 'PAR', 'http://engineering.arm.gov', false, true);
PAR_ID= m.invoke('SavePAR', 'PAD for RRA', 'PAD', 'http://engineering.arm.gov', false, true);

The PAR id is returned in the savePADetail function.
Save REcommendations 
	Name of the function = SavePADetail
	PARPAD_ID  = PAR_ID ' returned from the previous call.
	Zone_name = 'B'
	zonetype = 'zone'
	RecomIndex = 1(Evacuate) ,2(Restrict Access),3(Mitigate), 4(No action), 7(No Recommendation)'
	ModelImpactTime = 12
	ModelTipTime = 23
	ModelTailTime = 34
	PALT Time

S = m.invoke('SavePAR', PAR_ID, zone_name, zonetype, recomindex, modelimpactTime, ModelTipTime, ModelTailTime, PALTTime);
P= m.invoke('SavePADetail',<S>, 'B', 'zone', 1, 12,23, 23,34);

'If a facility needs to  be added to a PAd, use the same information but the zonetype parameter should be a 'point'

methods(m, '-full')
